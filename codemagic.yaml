workflows:
    ios-workflow:
        name: CodePush Workflow
        # instance_type: mac_mini_m4
        environment:
          groups:
             - app_store_connect
          ios_signing:
            distribution_type: app_store
            bundle_identifier: io.codepush.cm.com
          xcode: 16.3
        triggering:
          events:
            - push
            - pull_request
          branch_patterns:
            - pattern: '*'
              include: true
              source: false
          cancel_previous_builds: true
        when:
         changeset:
            includes:
              - 'android/'
            excludes:
              - 'ios/'
         # condition: (event.pull_request.draft) or (event.actions.ready_for_review)
        # when:
        #   condition: event.pull_request.draft
        # triggering:
        #   events:
        #      - push
        #      - pull_request
        # inputs:
        #   pr_number:
        #     description: Enter pull request number
        #     default: "string"
        # integrations:
        #   app_store_connect: CM
        scripts:
            - name: Ruby version update
              script: |
                brew upgrade ruby-build
                rbenv install 3.3.0
                rbenv global 3.3.0
                echo "RBENV_VERSION=3.3.0" >> $CM_ENV 
            - name: Create local .env file
              script: |
                   ruby -v
                   echo "MY_VAR=$MY_VAR" > .env
                   echo "ANOTHER_VAR=$MY_ANOTHER_VAR" > .env
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles --warn-only
            - name: Increment build number
              script: |
                cd $CM_BUILD_DIR/ios
                LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "6746455226")
                agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
            - name: Build the .app
              script: | 
                xcodebuild build \
                  -workspace "TeamTelliskivi.xcworkspace" \
                  -scheme "TeamTelliskivi" \
                  -sdk iphonesimulator \
                  -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.0' \
                  -configuration Debug \
                  CODE_SIGN_IDENTITY="" \
                  CODE_SIGNING_REQUIRED=NO \
                  CODE_SIGNING_ALLOWED=NO
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa \
                  --workspace "ios/TeamTelliskivi.xcworkspace" \
                  --scheme "TeamTelliskivi"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        # publishing:
        #   app_store_connect:
        #     api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        #     issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        #     key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        #     submit_to_app_store: true
        #     release_type: AFTER_APPROVAL
    react-native-android:
        name: React Native Android
        # triggering:
        #   events:
        #      - push
        #      - pull_request
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"            
            - name: Build Android release
              script: |
                LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME")
                if [ -z LATEST_BUILD_NUMBER ]; then
                  # fallback in case no build number was found from google play. Alternatively, you can `exit 1` to fail the build
                  UPDATED_BUILD_NUMBER=$BUILD_NUMBER
                else
                  UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
                fi
                cd android
                ./gradlew bundleRelease \
                  -PversionCode=$UPDATED_BUILD_NUMBER \
                  -PversionName=1.0.$UPDATED_BUILD_NUMBER
        artifacts:
            - android/app/build/outputs/**/*.aab
